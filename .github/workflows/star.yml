name: Run Track Stars

on:
  schedule:
    - cron: '0 0 * * *'  # 每天一次
  workflow_dispatch:

jobs:
  track-stargazers:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 python-dotenv  # 添加 python-dotenv

    - name: Get previous run ID
      id: get_previous_run_id
      env:
        MY_GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        echo "Repository: ${{ github.repository }}"
        response=$(curl -s -H "Authorization: token $MY_GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs?status=success&per_page=1")
        echo "API Response: $response"
        previous_run_id=$(echo $response | jq -r '.workflow_runs[0].id')
        echo "PREV_RUN_ID=$previous_run_id" >> $GITHUB_ENV

    - name: Get previous artifact URL
      id: get_artifact_url
      env:
        MY_GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        PREV_RUN_ID: ${{ env.PREV_RUN_ID }}
      run: |
        echo "Getting artifact URL for previous run ID: $PREV_RUN_ID"
        response=$(curl -s -H "Authorization: token $MY_GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/$PREV_RUN_ID/artifacts")
        echo "API Response: $response"
        artifact_url=$(echo $response | jq -r '.artifacts[0].archive_download_url')
        echo "ARTIFACT_URL=$artifact_url" >> $GITHUB_ENV

    - name: Download and extract previous stargazers file
      if: env.ARTIFACT_URL != 'null'
      env:
        MY_GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        ARTIFACT_URL: ${{ env.ARTIFACT_URL }}
      run: |
        echo "Downloading artifact from URL: $ARTIFACT_URL"
        curl -L -H "Authorization: token $MY_GITHUB_TOKEN" \
          -o artifact.zip \
          "$ARTIFACT_URL"
        unzip artifact.zip -d .
        if [ ! -f stargazers.json ]; then
          echo "stargazers.json not found, creating an empty file."
          echo "[]" > stargazers.json
        fi

    - name: List files for debugging
      if: always()
      run: ls -l  # 列出当前目录的文件，帮助调试

    - name: Track Stargazers
      env:
        TARGET_REPO: ${{ secrets.TARGET_REPO }}
        FEISHU_WEBHOOK: ${{ secrets.FEISHU_WEBHOOK }}
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: python star.py  # 替换为你的脚本文件名

    - name: Upload stargazers and CSV files
      uses: actions/upload-artifact@v3
      with:
        name: stargazers-${{ github.run_id }}
        path: |
          stargazers.json
          new.csv
          total.csv

  use-stargazers:
    runs-on: ubuntu-latest
    needs: track-stargazers

    steps:
    - name: Download stargazers and CSV files
      uses: actions/download-artifact@v3
      with:
        name: stargazers-${{ github.run_id }}

    - name: List files for debugging
      if: always()
      run: ls -l  # 列出当前目录的文件，帮助调试

    - name: Use the stargazers data
      run: cat stargazers.json